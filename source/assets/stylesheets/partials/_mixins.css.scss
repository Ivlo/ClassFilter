// ==========
// = mixins =
// ==========

@mixin clearfix{ 
    &:before,
    &:after {
      content: ".";    
      display: block;    
      height: 0;
      overflow: hidden;	
    }
    &:after {clear: both;}
    & {zoom: 1; } 
}


@mixin after($content : "") {
  & {
    *zoom: expression(
      this.runtimeStyle.zoom="1",
      (ea = this['appendChild']( document.createElement("small"), null )),
      ea.innerHTML="#{$content}",
      ea.className="after pseudo-element"
    );
  }
 
  &:after {
    content : $content;
  }
}

@mixin before($content : "") {
  & {
    *zoom: expression(
      this.runtimeStyle.zoom="1",
      (eb = this[ 'insertBefore']( document.createElement("small"), this.firstChild ) ),
      eb.innerHTML="#{$content}",
      eb.className="before pseudo-element"
    );
  }
 
  &:before {
    content : $content;
  }
}


@mixin after_and_before($after_content : "", $before_content : "") {
  & {
    *zoom: expression(
      this.runtimeStyle.zoom="1",
      (eb = this[ 'insertBefore' ]( document.createElement("small"),  this.firstChild )),
      (ea = this[ 'appendChild' ]( document.createElement("small"), null )),
      eb.innerHTML="#{$before_content}",
      eb.className="after pseudo-element",
      ea.innerHTML="#{$after_content}",
      ea.className="before pseudo-element"
    );
  }
  
  &:after {
    content : $after_content;
  }
  &:before {
    content : $before_content;
  }

}

@mixin inline-block() {
  display:-moz-inline-stack;
  display:inline-block;
  *display:inline;
  zoom:1;
}

@mixin font-family($font_name, $font_file, $mixin){
  @font-face {
    font-family: "#{$font_name}";
    src: font_url("#{$font_file}.eot");
    src: font_url("#{$font_file}.eot?#iefix") format("embedded-opentype"),
         font_url("#{$font_file}.woff") format("woff"),
         font_url("#{$font_file}.ttf") format("truetype"),
         font_url("#{$font_file}.svg#{$mixin}") format("svg");
    font-weight: normal;
    font-style: normal;
  }
  
  // El mixin crea automagicamente un placeholder 
  // para extender segun el nombre que se haya pasado .
  //   ej. @include font-family("KreonLight", "kreon-light-webfont", "kreon-light")
  //       %font-kreon-light{
  //          font-family: "#{$font_name}";
  //          font-weight: normal!important;
  //          font-style: normal!important;
  //        }
  %font-#{$mixin}{
    font-family: "#{$font_name}";
    font-weight: normal!important;
    font-style: normal!important;
  }
}

@mixin prefixer ($property, $value:null,
                 $webkit: true,
                    $moz: true,
                     $ms: true,
                      $o: true,
                   $spec: true) {
  @if $value{
    @if $webkit { -webkit-#{$property}: $value; }
    @if $moz    {    -moz-#{$property}: $value; }
    @if $ms     {     -ms-#{$property}: $value; }
    @if $o      {      -o-#{$property}: $value; }
    @if $spec   {         #{$property}: $value; }
  }
}